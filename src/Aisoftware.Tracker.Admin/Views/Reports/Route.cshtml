@model Aisoftware.Tracker.Borders.ViewModels.ReportRouteViewModel

<section class="content-header">
    <h1>
        Relatórios/Rotas
    </h1>
    <ol class="breadcrumb">
        <li><a href="/"><i class="fa fa-dashboard"></i> Dashboard</a></li>
        <li class="active">Relatórios</li>
    </ol>
</section>
<!-- Main content -->
<section class="content">
    <div class="row">
        <div class="col-xs-12">
            <div class="box">
                <div class="box-header">
                    <h3 class="box-title">Relatórios de Rotas</h3>
                </div>
                <!-- /.box-header -->
                <div class="box-body overflow-x">
                    <table id="data-table" class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th>Id</th>
                                <th>Placa</th>
                                <th>Protocolo</th>
                                <th>Horário do Dispositivo</th>
                                <th>Horário Corrigido</th>
                                <th>Horário do Servidor</th>
                                <th>Vencimento</th>
                                <th>Válido</th>
                                <th>Latitude</th>
                                <th>Longitude</th>
                                <th>Altitude</th>
                                <th>Velociadade</th>
                                <th>Endereço</th>
                                <th>Irregularidade</th>

                                <th>Ignição</th>
                                <th>Status</th>
                                <th>Distancia</th>
                                <th>Distancia Total /Km</th>
                                <th>Movimentação</th>
                                <th>Horas</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Routes)
                            {
                                string placa = Model.Devices?.Where(x => x.Id == item?.DeviceId)?.FirstOrDefault()?.Name;

                                var ignition = item.Attributes.Ignition;
                                var status = item.Attributes.Status;
                                var distance = item.Attributes.Distance;
                                var totalDistance = item.Attributes.TotalDistance;
                                var motion = item.Attributes.Motion;
                                var hours = item.Attributes.Hours;

                                <tr>
                                    <td>@Html.DisplayFor(modelItem => item.Id)</td>
                                    <td>@Html.DisplayFor(modelItem => placa)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Protocol)</td>
                                    <td>@Html.DisplayFor(modelItem => item.DeviceTimeStr)</td>
                                    <td>@Html.DisplayFor(modelItem => item.FixTimeStr)</td>
                                    <td>@Html.DisplayFor(modelItem => item.ServerTimeStr)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Outdated)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Valid)</td>
                                    <td>@Html.DisplayFor(modelItem => item.LatitudeStr)</td>
                                    <td>@Html.DisplayFor(modelItem => item.LongitudeStr)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Altitude)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Speed)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Address)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Accuracy)</td>
                                    <td>@Html.DisplayFor(modelItem => ignition)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Attributes.Status)</td>
                                    <td>@Html.DisplayFor(modelItem => distance)</td>
                                    <td>@Html.DisplayFor(modelItem => totalDistance)</td>
                                    <td>@Html.DisplayFor(modelItem => motion)</td>
                                    <td>@Html.DisplayFor(modelItem => hours)</td>
                                </tr>
                            }
                    </table>
                    <div class="row">
                        <div class="col-xs-12">
                            <div class="box-footer">
                                <a href="/@ViewBag.ControllerName?report=route" class="btn btn-default">Voltar</a>

                                <a href="/@ViewBag.ControllerName/ExportToCsv?deviceId=@ViewBag.deviceId&groupId=@ViewBag.groupId&from=@ViewBag.from&to=@ViewBag.to&typeReport=route"
                                    class="btn btn-success pull-right" style="margin-left: 15px;"><i
                                        class="fas fa-file-excel"></i> Exportar em Excel</a>
                                @if (!(ViewBag?.deviceId == null || ViewBag.deviceId == 0))
                                {
                                    <a href="/Maps?deviceId=@ViewBag.deviceId&groupId=@ViewBag.groupId&from=@ViewBag.from&to=@ViewBag.to"
                                    class="btn btn-primary pull-right"><i class="fa fa-map"></i> Ver Rota no Mapa</a>
                                }

                            </div>
                        </div>
                    </div>
                </div>
                <!-- /.box-body -->
            </div>
            <!-- /.box -->
        </div>
        <!-- /.col -->
    </div>
    <!-- /.row -->
</section>

<!-- DataTables -->
<script src="/components/datatables.net/js/jquery.dataTables.min.js"></script>
<script src="/components/datatables.net-bs/js/dataTables.bootstrap.min.js"></script>
<script src="/dist/js/dataTablesConfig.js"></script>

<!-- page script -->
<script>
    function ExportToCsv() {

        var obj = $('#data-table').dataTable();
        console.log(obj);

        var csv = obj.fnGetData();
        console.log(csv);

        $.ajax({
            url: '@ViewBag.ControllerName/ExportToCsv',
            type: 'POST',
            data: {
                reportRoutes: csv
            },
            success: function (data) {
                alert("Dispositivo excluído com sucesso!");
                location.reload();
            },
            error: function (data) {
                alert("Erro ao excluir dispositivo!");
            }
        });
    }

    function Delete(report) {
        $.ajax(
            {
                type: "POST",
                url: '@Url.Action("Cancel", "Reports")',
                data: {
                    report: report
                },
                error: function (result) {
                    alert("error");
                },
                success: function (result) {
                    if (result == true) {
                        var baseUrl = "/@ViewBag.ControllerName";
                        window.location.reload();
                    }
                    else {
                        alert("Houve um problema inesperado, Tente novamente mais tarde!");
                    }
                }
            });

    }
</script>